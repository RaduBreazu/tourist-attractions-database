CREATE TABLE TOURISTS (
    ID NUMBER(10) GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    NAME VARCHAR(255) NOT NULL,
    SURNAME VARCHAR(255) NOT NULL,
    AGE NUMBER(3) CHECK(AGE > 0 AND AGE < 250),
    CONSTRAINT PK_ID_TOURISTS PRIMARY KEY (ID)
);

CREATE TABLE DESTINATIONS (
    ID NUMBER(9) GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    NAME VARCHAR(100) NOT NULL,
    COUNTRY VARCHAR(100) NOT NULL,
    CONSTRAINT PK_ID_DESTINATIONS PRIMARY KEY (ID),
    CONSTRAINT UQ_DESTINATIONS UNIQUE (NAME, COUNTRY)
);

CREATE TABLE ACTIVITIES (
    ID NUMBER(6) GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    NAME VARCHAR(1000) NOT NULL,
    CONSTRAINT PK_ID_ACTIVITIES PRIMARY KEY (ID)
);

CREATE TABLE DESTINATIONS_ACTIVITIES (
    DESTINATION_ID NUMBER(9) NOT NULL,
    ACTIVITY_ID NUMBER(6) NOT NULL,
    CONSTRAINT PK_DESTINATION_ACTIVITY PRIMARY KEY (DESTINATION_ID, ACTIVITY_ID),
    CONSTRAINT FK_DESTINATION_ID_2 FOREIGN KEY (DESTINATION_ID) REFERENCES DESTINATIONS(ID),
    CONSTRAINT FK_ACTIVITY_ID_2 FOREIGN KEY (ACTIVITY_ID) REFERENCES ACTIVITIES(ID)
);

CREATE TABLE JOURNEYS (
    TOURIST_ID NUMBER(10) NOT NULL,
    JOURNEY_ID NUMBER(11) GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    DESTINATION_ID NUMBER(9) NOT NULL,
    START_DATE DATE NOT NULL,
    FINISH_DATE DATE NOT NULL,
    CONSTRAINT PK_JOURNEY_ID PRIMARY KEY (JOURNEY_ID),
    CONSTRAINT FK_DESTINATION_ID FOREIGN KEY (DESTINATION_ID) REFERENCES DESTINATIONS(ID),
    CONSTRAINT PK_TOURIST_ID FOREIGN KEY (TOURIST_ID) REFERENCES TOURISTS(ID),
    CONSTRAINT FK_ACTIVITIES FOREIGN KEY (ACTIVITY_ID) REFERENCES ACTIVITIES(ID)
);

CREATE TABLE HISTORY (
    TOURIST_ID NUMBER(10) NOT NULL,
    TOURIST_NAME VARCHAR(255) NOT NULL,
    TOURIST_SURNAME VARCHAR(255) NOT NULL,
    DESTINATION_NAME VARCHAR(100) NOT NULL,
    DESTINATION_COUNTRY VARCHAR(100) NOT NULL,
    START_DATE DATE NOT NULL,
    FINISH_DATE DATE NOT NULL,
    CONSTRAINT FK_TOURIST_ID FOREIGN KEY (TOURIST_ID) REFERENCES TOURISTS(ID)
);

CREATE TABLE JOURNEY_ACTIVITIES (
    JOURNEY_ID NUMBER(11) NOT NULL,
    ACTIVITY_ID NUMBER(6) NOT NULL,
    CONSTRAINT PK_JOURNEY_ACT PRIMARY KEY (JOURNEY_ID, ACTIVITY_ID),
    CONSTRAINT FK_JOURNEY_ID FOREIGN KEY (JOURNEY_ID) REFERENCES JOURNEYS(JOURNEY_ID),
    CONSTRAINT FK_ACTIVITY_ID FOREIGN KEY (ACTIVITY_ID) REFERENCES ACTIVITIES(ID)
);